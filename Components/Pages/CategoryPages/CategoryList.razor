@page "/categories"
@inject ICategoryRepository _categoryRepo
@inject IJSRuntime _jsRuntime

@if (Loading)
{
    <_Loading></_Loading>
}
else
{
    <_BootstrapModal 
    ModalId="@DELETE_MODAL_ID" 
    ModalTitle="Confirm Category Deletion"
    OnConfirm="@(() => ConfirmDelete())"
    ConfirmButtonStyle = "btn-danger"
    ConfirmText="Delete"
    >
        <p>Are you sure you want to delete this category?</p>
    </_BootstrapModal>
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="categories/create" class="btn btn-lg btn-secondary" style="width:250px;">
                        <i class="bi bi-plus-square"></i>
                        Add New Category
                    </a>
                </div>
            </div>
            @if (Categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var cat in Categories)
                        {
                            <tr>
                                <td>
                                    @cat.Name
                                </td>
                                <td>
                                    <a href="@($"categories/update/{cat.Id}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit
                                    </a>
                                    <button class="btn btn-danger" @onclick="@(() => OpenDeleteModal(cat.Id))">
                                        <i class="bi bi-trash3"></i>
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            }
        </div>
    </div>
}

@code {
    private const string DELETE_MODAL_ID = "deleteModal";
    public bool Loading { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    private int DeleteCategoryId { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Categories = await GetCategories();
            Loading = false;
            StateHasChanged();
        }
    }

    private async Task<IEnumerable<Category>> GetCategories()
    {
        return await _categoryRepo.GetAllAsync();
    }

    private async Task OpenDeleteModal(int id)
    {
        DeleteCategoryId = id;
        await _jsRuntime.OpenModal(DELETE_MODAL_ID);
    }

    private async Task ConfirmDelete()
    {
        Loading = true;
        await _jsRuntime.CloseModal(DELETE_MODAL_ID);
        if (DeleteCategoryId > 0)
        {
            var res = await _categoryRepo.DeleteAsync(DeleteCategoryId);
            if (res)
            {
                await _jsRuntime.ToastrSuccess("Category deleted successfully");
            }
            else
            {
                await _jsRuntime.ToastrError("Category delete failed");
            }
            

            Categories = await GetCategories();
        }

        DeleteCategoryId = 0;
        Loading = false;
    }
}
